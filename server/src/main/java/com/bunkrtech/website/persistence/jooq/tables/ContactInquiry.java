/*
 * This file is generated by jOOQ.
*/
package com.bunkrtech.website.persistence.jooq.tables;


import com.bunkrtech.website.persistence.jooq.Keys;
import com.bunkrtech.website.persistence.jooq.Public;
import com.bunkrtech.website.persistence.jooq.tables.records.ContactInquiryRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContactInquiry extends TableImpl<ContactInquiryRecord> {

    private static final long serialVersionUID = 1611089970;

    /**
     * The reference instance of <code>public.contact_inquiry</code>
     */
    public static final ContactInquiry CONTACT_INQUIRY = new ContactInquiry();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ContactInquiryRecord> getRecordType() {
        return ContactInquiryRecord.class;
    }

    /**
     * The column <code>public.contact_inquiry.id</code>.
     */
    public final TableField<ContactInquiryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('contact_inquiry_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.contact_inquiry.contact_name</code>.
     */
    public final TableField<ContactInquiryRecord, String> CONTACT_NAME = createField("contact_name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.contact_inquiry.company_name</code>.
     */
    public final TableField<ContactInquiryRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>public.contact_inquiry.email</code>.
     */
    public final TableField<ContactInquiryRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.contact_inquiry.phone</code>.
     */
    public final TableField<ContactInquiryRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * Create a <code>public.contact_inquiry</code> table reference
     */
    public ContactInquiry() {
        this("contact_inquiry", null);
    }

    /**
     * Create an aliased <code>public.contact_inquiry</code> table reference
     */
    public ContactInquiry(String alias) {
        this(alias, CONTACT_INQUIRY);
    }

    private ContactInquiry(String alias, Table<ContactInquiryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ContactInquiry(String alias, Table<ContactInquiryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ContactInquiryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_CONTACT_INQUIRY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ContactInquiryRecord> getPrimaryKey() {
        return Keys.CONTACT_INQUIRY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ContactInquiryRecord>> getKeys() {
        return Arrays.<UniqueKey<ContactInquiryRecord>>asList(Keys.CONTACT_INQUIRY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ContactInquiry as(String alias) {
        return new ContactInquiry(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ContactInquiry rename(String name) {
        return new ContactInquiry(name, null);
    }
}
